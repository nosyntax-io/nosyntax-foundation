name: Source Code Lifecycle

on:
  workflow_dispatch:
    inputs:
      build-details:
        description: "Build Details"
        required: true
      project-details:
        description: "Project Details"
        required: true

jobs:
  configure:
    name: Configure Source Code
    runs-on: ubuntu-latest

    env:
      BUILD_ID: ${{ fromJson(inputs['build-details'])['build_id'] }}
      BUILD_ENVIRONMENT: ${{ fromJson(inputs['build-details'])['build_environment'] }}
      BUILD_OUTPUT: ${{ fromJson(inputs['build-details'])['build_output'] }}
      PROJECT_ID: ${{ fromJson(inputs['project-details'])['project_id'] }}
      PROJECT_ACCESS_TOKEN: ${{ fromJson(inputs['project-details'])['project_access_token'] }}
      APP_ID: ${{ fromJson(inputs['project-details'])['app_id'] }}
      APP_NAME: ${{ fromJson(inputs['project-details'])['app_name'] }}
      APP_VERSION: ${{ fromJson(inputs['project-details'])['app_version'] }}
      APP_BUILD_NUMBER: ${{ fromJson(inputs['project-details'])['app_build_number'] }}
      APP_REMOTE_CONFIG: ${{ fromJson(inputs['project-details'])['app_remote_config'] }}
      GOOGLE_SERVICES_CONFIG: ${{ fromJson(inputs['project-details'])['google_services_config'] }}
      ONESIGNAL_APP_ID: ${{ fromJson(inputs['project-details'])['onesignal_app_id'] }}
      ADS_ENABLED: ${{ fromJson(inputs['project-details'])['ads_enabled'] }}
      ADMOB_APP_ID: ${{ fromJson(inputs['project-details'])['admob_app_id'] }}
      ADMOB_BANNER_ID: ${{ fromJson(inputs['project-details'])['admob_banner_id'] }}
      ADMOB_INTERSTITIAL_ID: ${{ fromJson(inputs['project-details'])['admob_interstitial_id'] }}
      KEYSTORE_FILE: ${{ fromJson(inputs['project-details'])['keystore_file'] }}
      KEYSTORE_PASSWORD: ${{ fromJson(inputs['project-details'])['keystore_password'] }}
      KEY_ALIAS: ${{ fromJson(inputs['project-details'])['key_alias'] }}
      KEY_PASSWORD: ${{ fromJson(inputs['project-details'])['key_password'] }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: pip install -r .github/requirements.txt

      - name: Set App Properties
        run: |
          python .github/scripts/render_properties_template.py \
            --template-file "local.properties.template" \
            --output-file "local.properties" \
            --context \
              "APP_ID=${{ env.APP_ID }}" \
              "APP_NAME=${{ env.APP_NAME }}" \
              "APP_VERSION=${{ env.APP_VERSION }}" \
              "APP_BUILD_NUMBER=${{ env.APP_BUILD_NUMBER }}" \
              "APP_REMOTE_CONFIG=${{ env.APP_REMOTE_CONFIG }}" \
              "SERVER_AUTH_TOKEN=${{ secrets.API_AUTH_TOKEN }}" \
              "SERVER_ACCESS_TOKEN=${{ env.PROJECT_ACCESS_TOKEN }}" \
              "ONESIGNAL_APP_ID=${{ env.ONESIGNAL_APP_ID }}" \
              "ADMOB_APP_ID=${{ env.ADMOB_APP_ID }}" \
              "ADMOB_BANNER_ID=${{ env.ADMOB_BANNER_ID }}" \
              "ADMOB_INTERSTITIAL_ID=${{ env.ADMOB_INTERSTITIAL_ID }}"

      - name: Generate Launcher Icons
        run: |
          python .github/scripts/generate_launcher_icons.py \
            --res-directory app/src/main/res \
            --icon-url "https://appstatic.nosyntax.io/icons/launcher/${{ env.PROJECT_ID }}.png" \
            --fallback-url "https://appstatic.nosyntax.io/icons/launcher/fallback_icon.png" \
            --auth-username "${{ secrets.APPSTATIC_AUTH_USERNAME }}" \
            --auth-password "${{ secrets.APPSTATIC_AUTH_PASSWORD }}"

      - name: Obtain Signing Key
        run: |
          echo "${{ env.KEYSTORE_FILE }}" | base64 -d > "signing.keystore"

      - name: Set Signing Properties
        run: |
          python .github/scripts/render_properties_template.py \
            --template-file "signing.properties.template" \
            --output-file "signing.properties" \
            --context \
              "KEYSTORE_FILE=signing.keystore" \
              "KEYSTORE_PASSWORD=${{ env.KEYSTORE_PASSWORD }}" \
              "KEY_ALIAS=${{ env.KEY_ALIAS }}" \
              "KEY_PASSWORD=${{ env.KEY_PASSWORD }}"

      - name: Archive Source Code
        uses: actions/upload-artifact@v4
        if: ${{ contains(env.BUILD_OUTPUT, 'source') }}
        with:
          name: sourcecode
          path: |
            .

  build:
    name: Build Release Artifact
    needs: configure
    runs-on: ubuntu-latest
    if: ${{ contains(fromJson(inputs['build-details'])['build_output'], 'apk') }}

    steps:
      - name: Download Source Code
        uses: actions/download-artifact@v4
        with:
          name: sourcecode
          path: ./

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
          cache-read-only: false

      - name: Build Release
        run: |
          chmod +x gradlew
          if [ "${{ fromJson(inputs['project-details'])['ads_enabled'] }}" == "enabled" ]; then
            ./gradlew assembleMonetizeRelease
          else
            ./gradlew assembleRegularRelease
          fi