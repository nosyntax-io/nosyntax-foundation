name: Source Code Lifecycle

on:
  workflow_dispatch:
    inputs:
      build-info:
        description: "Build Info"
        required: true
      project-info:
        description: "Project Info"
        required: true
      app-config:
        description: "App Config"
        required: true
      signing-config:
        description: "Signing Config"
        required: true

jobs:
  configure:
    name: Configure Source Code
    runs-on: ubuntu-latest

    env:
      BUILD_INFO: ${{ inputs['build-info'] }}
      PROJECT_INFO: ${{ inputs['project-info'] }}
      APP_CONFIG: ${{ inputs['app-config'] }}
      SIGNING_CONFIG: ${{ inputs['signing-config'] }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/requirements.txt

      - name: Set App Configuration
        run: |
          python .github/scripts/render_template.py \
            --template-file "app-config.yml.template" \
            --output-file "app-config.yml" \
            --data '${{ env.APP_CONFIG }}'

      - name: Generate Icon Assets
        run: |
          base_url="https://appstatic.nosyntax.io/icons"
          project_id="${{ fromJson(env.PROJECT_INFO).PROJECT_ID }}"
          python .github/scripts/generate_icon_assets.py \
            --res-directory "app/src/main/res" \
            --launcher-icon-url "${base_url}/launcher/${project_id}.png" \
            --splash-icon-url "${base_url}/splash/${project_id}.png" \
            --app-icon-url "${base_url}/app/${project_id}.png" \
            --fallback-icon-url "${base_url}/fallback_icon.png" \
            --auth-username "${{ secrets.APPSTATIC_AUTH_USERNAME }}" \
            --auth-password "${{ secrets.APPSTATIC_AUTH_PASSWORD }}"

      - name: Obtain Signing Key
        run: |
          keystore_file="${{ fromJson(env.SIGNING_CONFIG).KEYSTORE_FILE }}"
          keystore_filename="${{ fromJson(env.SIGNING_CONFIG).KEYSTORE_FILENAME }}"
          echo "$keystore_file" | base64 -d > "$keystore_filename"

      - name: Set Signing Properties
        run: |
          python .github/scripts/render_template.py \
            --template-file "signing.properties.template" \
            --output-file "signing.properties" \
            --data '${{ env.SIGNING_CONFIG }}'

      - name: Archive Source Code
        uses: actions/upload-artifact@v4
        if: ${{ fromJson(env.BUILD_INFO).BUILD_OUTPUT == "source" }}
        with:
          name: sourcecode
          path: .

  build:
    name: Build Release
    needs: configure
    if: ${{ fromJson(inputs['build-info']).BUILD_OUTPUT == 'app' }}
    runs-on: ubuntu-latest

    env:
      BUILD_INFO: ${{ inputs['build-info'] }}
      PROJECT_INFO: ${{ inputs['project-info'] }}

    steps:
      - name: Retrieve Source Code
        uses: actions/download-artifact@v4
        with:
          name: sourcecode
          path: ./

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set Up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Set App Permissions
        run: |
          ./gradlew setPermissions

      - name: Generate Release Artifacts
        run: |
          ./gradlew assembleRegularRelease
          ./gradlew bundleRegularRelease