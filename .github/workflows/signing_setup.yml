name: Signing Setup

on:
  workflow_dispatch:
    inputs:
      project-id:
        description: 'Project ID'
        required: true

jobs:
  signing-setup:
    name: Signing Setup
    runs-on: ubuntu-latest

    steps:
      - name: Set Up Environments
        run: |
          PROJECT_ID=$(jq -r '.inputs["project-id"]' $GITHUB_EVENT_PATH)
          echo ::add-mask::$PROJECT_ID
          echo PROJECT_ID=$PROJECT_ID >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Generate Keystore
        run: |
          PASSWORD=$(openssl rand -base64 24 | tr -dc 'A-Za-z0-9')
          echo "::add-mask::$PASSWORD"

          keytool -genkey -v \
            -keystore signing.keystore \
            -alias $PROJECT_ID \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass $PASSWORD \
            -keypass $PASSWORD \
            -dname "O=$PROJECT_ID"

          base64Keystore=$(base64 -w 0 signing.keystore)
          echo "::add-mask::$base64Keystore"

          echo "KEYSTORE_FILE=$base64Keystore" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=$PASSWORD" >> $GITHUB_ENV
          echo "KEY_ALIAS=$PROJECT_ID" >> $GITHUB_ENV
          echo "KEY_PASSWORD=$PASSWORD" >> $GITHUB_ENV

      - name: Extract Certificate Fingerprints
        run: |
          keystoreOutput=$(keytool -list -v -keystore signing.keystore -alias $KEY_ALIAS -storepass $KEYSTORE_PASSWORD)

          for type in SHA1 SHA256; do
            fingerprint=$(echo "$keystoreOutput" | awk -v type="$type" '/'"$type"':/ {print $2}')
            echo "::add-mask::$fingerprint"
            echo "${type}_FINGERPRINT=$fingerprint" >> $GITHUB_ENV
          done

      - name: Update Signing Settings
        run: |
          curl -s -f -X POST "https://api.nosyntax.io/actions/update_signing_settings" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "API-KEY: ${{ secrets.API_KEY }}" \
            -d "project_id=${{ env.PROJECT_ID }}" \
            -d "keystore_file=${{ env.KEYSTORE_FILE }}" \
            -d "keystore_password=${{ env.KEYSTORE_PASSWORD }}" \
            -d "key_alias=${{ env.KEY_ALIAS }}" \
            -d "key_password=${{ env.KEY_PASSWORD }}" \
            -d "sha1_fingerprint=${{ env.SHA1_FINGERPRINT }}" \
            -d "sha256_fingerprint=${{ env.SHA256_FINGERPRINT }}"